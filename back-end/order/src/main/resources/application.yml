spring:
  application:
    name: order-service
  data:
    mongodb:
      uri: mongodb+srv://vietnhat0351:1234@cluster0.16gi4od.mongodb.net/e-commerce-order-service?retryWrites=true&w=majority&appName=Cluster0
  kafka:
    bootstrap-servers: localhost:9092 #,kafka2:9093,kafka3:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: orderConfirmation:com.example.order.kafka.OrderConfirmation
    consumer:
      group-id: orderGroup
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: paymentSuccessNotification:com.example.order.kafka.PaymentSuccessNotification
feign:
  client:
    product-service:
      url: http://localhost:9191/api/v1/products
    user-service:
      url: http://localhost:9191/api/v1/users

server:
  port: 8083
springdoc:
  swagger-ui:
    oauth:
      client-id: e-commerce-backend
      client-secret: zneg8gw1cxIzcGt3EIS043cmTYdikYIg
    path: /api/v2/orders/api-docs
  api-docs:
    path: /api/v2/orders/v3/api-docs
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/discovery/eureka/
  instance:
    instance-id: ${spring.application.name}:${random.value}
